//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DeadManSwitch.Service.Wcf.Proxy.AccountService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IAccountService")]
    internal interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/IsRegistrationOpen", ReplyAction="http://tempuri.org/IAccountService/IsRegistrationOpenResponse")]
        DeadManSwitch.Service.Wcf.OperationResponse<bool> IsRegistrationOpen();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UserNameExists", ReplyAction="http://tempuri.org/IAccountService/UserNameExistsResponse")]
        DeadManSwitch.Service.Wcf.OperationResponse<bool> UserNameExists(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/RegisterUser", ReplyAction="http://tempuri.org/IAccountService/RegisterUserResponse")]
        DeadManSwitch.Service.Wcf.OperationResponse<string[]> RegisterUser(DeadManSwitch.Service.Wcf.User user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Login", ReplyAction="http://tempuri.org/IAccountService/LoginResponse")]
        DeadManSwitch.Service.Wcf.OperationResponse<DeadManSwitch.Service.Wcf.User> Login(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/FindUser", ReplyAction="http://tempuri.org/IAccountService/FindUserResponse")]
        DeadManSwitch.Service.Wcf.OperationResponse<DeadManSwitch.Service.Wcf.User> FindUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/FindUserPreferences", ReplyAction="http://tempuri.org/IAccountService/FindUserPreferencesResponse")]
        DeadManSwitch.Service.Wcf.OperationResponse<DeadManSwitch.Service.Wcf.UserPreferences> FindUserPreferences(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdatePreferences", ReplyAction="http://tempuri.org/IAccountService/UpdatePreferencesResponse")]
        DeadManSwitch.Service.Wcf.OperationResponse<bool> UpdatePreferences(string userName, DeadManSwitch.Service.Wcf.UserPreferences preferences);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateProfile", ReplyAction="http://tempuri.org/IAccountService/UpdateProfileResponse")]
        DeadManSwitch.Service.Wcf.OperationResponse<bool> UpdateProfile(string userName, DeadManSwitch.Service.Wcf.UserProfile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ChangePassword", ReplyAction="http://tempuri.org/IAccountService/ChangePasswordResponse")]
        DeadManSwitch.Service.Wcf.OperationResponse<bool> ChangePassword(string userName, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetSystemTimeZones", ReplyAction="http://tempuri.org/IAccountService/GetSystemTimeZonesResponse")]
        DeadManSwitch.Service.Wcf.OperationResponse<System.Collections.Generic.Dictionary<string, string>> GetSystemTimeZones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetCheckInWindowOptions", ReplyAction="http://tempuri.org/IAccountService/GetCheckInWindowOptionsResponse")]
        DeadManSwitch.Service.Wcf.OperationResponse<System.Collections.Generic.Dictionary<string, string>> GetCheckInWindowOptions();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IAccountServiceChannel : DeadManSwitch.Service.Wcf.Proxy.AccountService.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class AccountServiceClient : System.ServiceModel.ClientBase<DeadManSwitch.Service.Wcf.Proxy.AccountService.IAccountService>, DeadManSwitch.Service.Wcf.Proxy.AccountService.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DeadManSwitch.Service.Wcf.OperationResponse<bool> IsRegistrationOpen() {
            return base.Channel.IsRegistrationOpen();
        }
        
        public DeadManSwitch.Service.Wcf.OperationResponse<bool> UserNameExists(string userName) {
            return base.Channel.UserNameExists(userName);
        }
        
        public DeadManSwitch.Service.Wcf.OperationResponse<string[]> RegisterUser(DeadManSwitch.Service.Wcf.User user, string password) {
            return base.Channel.RegisterUser(user, password);
        }
        
        public DeadManSwitch.Service.Wcf.OperationResponse<DeadManSwitch.Service.Wcf.User> Login(string userName, string password) {
            return base.Channel.Login(userName, password);
        }
        
        public DeadManSwitch.Service.Wcf.OperationResponse<DeadManSwitch.Service.Wcf.User> FindUser(string userName) {
            return base.Channel.FindUser(userName);
        }
        
        public DeadManSwitch.Service.Wcf.OperationResponse<DeadManSwitch.Service.Wcf.UserPreferences> FindUserPreferences(string userName) {
            return base.Channel.FindUserPreferences(userName);
        }
        
        public DeadManSwitch.Service.Wcf.OperationResponse<bool> UpdatePreferences(string userName, DeadManSwitch.Service.Wcf.UserPreferences preferences) {
            return base.Channel.UpdatePreferences(userName, preferences);
        }
        
        public DeadManSwitch.Service.Wcf.OperationResponse<bool> UpdateProfile(string userName, DeadManSwitch.Service.Wcf.UserProfile profile) {
            return base.Channel.UpdateProfile(userName, profile);
        }
        
        public DeadManSwitch.Service.Wcf.OperationResponse<bool> ChangePassword(string userName, string oldPassword, string newPassword) {
            return base.Channel.ChangePassword(userName, oldPassword, newPassword);
        }
        
        public DeadManSwitch.Service.Wcf.OperationResponse<System.Collections.Generic.Dictionary<string, string>> GetSystemTimeZones() {
            return base.Channel.GetSystemTimeZones();
        }
        
        public DeadManSwitch.Service.Wcf.OperationResponse<System.Collections.Generic.Dictionary<string, string>> GetCheckInWindowOptions() {
            return base.Channel.GetCheckInWindowOptions();
        }
    }
}
